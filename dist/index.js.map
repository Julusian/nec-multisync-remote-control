{"version":3,"file":null,"sources":["../src/parameters/util.js","../src/parameters/adjust.js","../src/parameters/audio.js","../src/parameters/picture.js","../src/parameters/schedule.js","../src/parameters/index.js","../src/util.js","../src/types.js","../src/builder.js","../src/parser.js","../src/monitorid.js","../src/messagequeue.js","../src/index.js"],"sourcesContent":["export function FlattenParameters(key, tree, result){\n  if(tree.page || tree.code || tree.type)\n    return result[key] = tree;\n\n  if(key.length > 0)\n    key += \".\";\n\n  for(let i in tree){\n    FlattenParameters(key + i, tree[i], result);\n  }\n\n  return result;\n}","export default {\n  AUTO_SETUP: {\n    page: \"00\",\n    code: \"1E\",\n    type: \"momentary\",\n    value: 1\n  },\n\n  H_POSITION: {\n    page: \"00\",\n    code: \"20\",\n    type: \"range\",\n    min: 0,\n    max: 255\n  }, \n  V_POSITION: {\n    page: \"00\",\n    code: \"30\",\n    type: \"range\",\n    min: 0,\n    max: 255\n  }, \n  CLOCK: {\n    page: \"00\",\n    code: \"0E\",\n    type: \"range\",\n    min: 0,\n    max: 255\n  }, \n  CLOCK_PHASE: {\n    page: \"00\",\n    code: \"3E\",\n    type: \"range\",\n    min: 0,\n    max: 255\n  },\n  H_RESOLUTION: {\n    page: \"02\",\n    code: \"50\",\n    type: \"range\",\n    min: 0,\n    max: 255\n  },\n  V_RESOLUTION: {\n    page: \"02\",\n    code: \"51\",\n    type: \"range\",\n    min: 0,\n    max: 255\n  },\n  INPUT_RESOLUTION: {\n    page: \"02\",\n    code: \"DA\",\n    type: \"single\",\n    options: {\n      1: \"AUTO\",\n      2: \"1024x768\",\n      3: \"1280z768\",\n      4: \"1360x768\",\n      5: \"1366x768\",\n      6: \"1400x1050\",\n      7: \"1680x1050\"\n    }\n  },\n\n  ZOOM_MODE: {\n    BASE_ZOOM: {\n      page: \"02\",\n      code: \"CE\",\n      type: \"single\",\n      options: {\n        3: \"16_9\",\n        4: \"14_9\",\n        5: \"DYNAMIC\",\n        1: \"OFF\",\n        2: \"CUSTOM\"\n      }\n    },\n    ZOOM: {\n      page: \"02\",\n      code: \"6F\",\n      type: \"range\",\n      min: 1,\n      max: 201\n    },\n    H_EXPANSION: {\n      page: \"02\",\n      code: \"6C\",\n      type: \"range\",\n      min: 1,\n      max: 201\n    },\n    V_EXPANSION: {\n      page: \"02\",\n      code: \"6D\",\n      type: \"range\",\n      min: 1,\n      max: 201\n    },\n    H_POSITION: {\n      page: \"02\",\n      code: \"CC\",\n      type: \"range\",\n      min: 0,\n      max: 255\n    },\n    V_POSITION: {\n      page: \"02\",\n      code: \"CD\",\n      type: \"range\",\n      min: 0,\n      max: 255\n    },\n  },\n\n  ASPECT: {\n    page: \"02\",\n    code: \"70\",\n    type: \"single\",\n    options: {\n      1: \"NORMAL\",\n      2: \"FULL\",\n      3: \"WIDE\",\n      4: \"ZOOM\",\n      5: \"TRIM\"\n    }\n  },\n\n  ADJUST_RESET: {\n    page: \"02\",\n    code: \"CB\",\n    type: \"momentary\",\n    value: 3\n  }\n};","export default {\n  BALANCE: {\n    page: \"00\",\n    code: \"93\",\n    type: \"range\",\n    min: 0,\n    max: 100\n  },\n  TREBLE: {\n    page: \"00\",\n    code: \"8F\",\n    type: \"range\",\n    min: 0,\n    max: 100\n  },\n  BASS: {\n    page: \"00\",\n    code: \"91\",\n    type: \"range\",\n    min: 0,\n    max: 100\n  },\n\n  SURROUND: {\n    page: \"02\",\n    code: \"34\",\n    type: \"single\",\n    options: {\n      1: \"OFF\",\n      2: \"LOW\",\n      3: \"HIGH\"\n    }\n  },\n  AUDIO_INPUT: {\n    page: \"02\",\n    code: \"2E\",\n    type: \"single\",\n    options: {\n      1: \"AUDIO1\",\n      2: \"AUDIO2\",\n      3: \"AUDIO3\",\n      4: \"HDMI\",\n      6: \"OPTION\",\n      7: \"DISPLAYPORT\"\n    }\n  },\n\n  AUDIO_RESET: {\n    page: \"02\",\n    code: \"CB\",\n    type: \"momentary\",\n    value: 4\n  }\n};","export default {\n  BRIGHTNESS: {\n    page: \"00\",\n    code: \"10\",\n    type: \"range\",\n    min: 0,\n    max: 100\n  },\n  CONTRAST: {\n    page: \"00\",\n    code: \"12\",\n    type: \"range\",\n    min: 0,\n    max: 100\n  },\n  SHARPNESS: {\n    page: \"00\",\n    code: \"8C\",\n    type: \"range\",\n    min: 0,\n    max: 82\n  },\n  BLACK_LEVEL: {\n    page: \"00\",\n    code: \"92\",\n    type: \"range\",\n    min: 0,\n    max: 63\n  },\n  TINT: {\n    page: \"00\",\n    code: \"90\",\n    type: \"range\",\n    min: 0,\n    max: 63\n  },\n  COLOR: {\n    page: \"02\",\n    code: \"1F\",\n    type: \"range\",\n    min: 0,\n    max: 63\n  },\n  COLOR_TEMPERATURE: {\n    page: \"00\",\n    code: \"54\",\n    type: \"range\",\n    min: 0,\n    max: 74\n  },\n\n  COLOR_CONTROL: {\n      RED: {\n      page: \"00\",\n      code: \"9B\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    YELLOW: {\n      page: \"00\",\n      code: \"9C\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    GREEN: {\n      page: \"00\",\n      code: \"9D\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    CYAN: {\n      page: \"00\",\n      code: \"9E\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    BLUE: {\n      page: \"00\",\n      code: \"9F\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    MAGENTA: {\n      page: \"00\",\n      code: \"A0\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    SATURATION: {\n      page: \"00\",\n      code: \"8A\",\n      type: \"range\",\n      min: 0,\n      max: 10\n    }\n  },\n\n  GAMMA_SELECTION: {\n    page: \"02\",\n    code: \"68\",\n    type: \"single\",\n    options: {\n      1: \"NATIVE\",\n      4: \"TWO_POINT_TWO\",\n      8: \"TWO_POINT_FOUR\",\n      7: \"S\",\n      5: \"DICOM\",\n      6: \"PROGRAMMABLE\"\n    }\n  },\n\n  MOVIE_SETTINGS: {\n    ADAPTIVE_CONTRAST: {\n      page: \"02\",\n      code: \"8D\",\n      type: \"single\",\n      options: {\n        0: \"NONE\",\n        1: \"OFF\",\n        2: \"LOW\",\n        3: \"MIDDLE\",\n        4: \"HIGH\"\n      }\n    },\n    NOISE_REDUCTION: {\n      page: \"02\",\n      code: \"20\",\n      type: \"single\",\n      options: []\n    },\n    FILM_MODE: {\n      page: \"02\",\n      code: \"23\",\n      type: \"toggle\"\n    }\n  },\n\n  PICTURE_MODE: {\n    page: \"02\",\n    code: \"1A\",\n    type: \"single\",\n    options: {\n      1: \"SRGB\",\n      3: \"HIBRIGHT\",\n      4: \"STANDARD\",\n      5: \"CINEMA\",\n      6: \"ISF_DAY\",\n      7: \"ISF_NIGHT\",\n      11: \"AMBIENT1\",\n      12: \"AMBIENT2\"\n    }\n  },\n\n  AMBIENT: {\n    AMBIENT_BRIGHTNESS_LOW: {\n      page: \"10\",\n      code: \"33\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    AMBIENT_BRIGHTNESS_HIGH: {\n      page: \"10\",\n      code: \"34\",\n      type: \"range\",\n      min: 0,\n      max: 100\n    },\n    CURRENT_ILLUMINANCE: {\n      page: \"02\",\n      code: \"B4\",\n      readonly: true,\n      type: \"range\",\n      min: 0,\n      max: 255\n    },\n    BRIGHT_SENSOR: {\n      page: \"02\",\n      code: \"B5\",\n      readonly: true,\n      type: \"range\",\n      min: 0,\n      max: 255\n    }\n  },\n\n  PICTURE_RESET: {\n    page: \"02\",\n    code: \"CB\",\n    type: \"momentary\",\n    value: 2\n  }\n};","export default {\n  OFF: {\n    page: \"02\",\n    code: \"2B\",\n    type: \"single\",\n    options: []\n  },\n  ENABLE: {\n    page: \"02\",\n    code: \"E5\",\n    type: \"single\",\n    options: []\n  },\n  DISABLE: {\n    page: \"02\",\n    code: \"E6\",\n    type: \"single\",\n    options: []\n  },\n\n  SCHEDULE_RESET: {\n    page: \"02\",\n    code: \"CB\",\n    type: \"momentary\",\n    value: 5\n  }\n};","import { FlattenParameters } from './util';\n\nimport adjust from './adjust';\nimport audio from './audio';\nimport picture from './picture';\nimport schedule from './schedule';\n\nexport const Parameters = {\n  PICTURE: picture,\n  ADJUST: adjust,\n  AUDIO: audio, \n  SCHEDULE: schedule,\n\n  // TODO remainder\n};\n\nexport const ParametersFlat = FlattenParameters(\"\", Parameters, {});\n\nexport function ParameterFromCodes(page, code){\n  if(page === undefined || code === undefined)\n    return null;\n\n  for (let key in Object.keys(ParametersFlat)){\n    const node = ParametersFlat[key];\n    if (node.page == page && node.code == code)\n      return {\n        key: key,\n        value: node\n      };\n  }\n\n  return null;\n}\n\n\nexport function ParameterFromKey(targetKey){\n  if(targetKey === undefined)\n    return null;\n\n  targetKey = targetKey.toUpperCase();\n\n  for (let key in Object.keys(ParametersFlat)){\n    if (key != targetKey)\n      continue;\n\n    const node = ParametersFlat[key];\n    return {\n      key: key,\n      value: node\n    };\n  }\n\n  return null;\n}\n","export function padHex(hex){\n  return (hex.length == 1) ? \"0\" + hex : hex;\n}\n\nexport function encodeHex(hex){\n  hex = padHex(hex);\n  let encoded = \"\";\n  \n  for(let i=0; i<hex.length; i++){\n    encoded += padHex(hex.charCodeAt(i).toString(16));\n  }\n\n  return encoded;\n}\n\nexport function decodeHex(encoded){\n  let hex = \"\";\n  \n  for(let i=0; i<encoded.length; i+=2){\n    const b = encoded.substr(i, 2);\n    const c = String.fromCharCode(parseInt(b, 16));\n\n    hex += c;\n  }\n\n  return hex;\n}","export const MessageType = {\n  COMMAND: \"41\",\n  COMMAND_REPLY: \"42\",\n  GET: \"43\",\n  GET_REPLY: \"44\",\n  SET: \"45\",\n  SET_REPLY: \"46\"\n};\n\nexport const OperationType = {\n  SET: \"00\",\n  MOMENTARY: \"01\"\n};\n\n\nexport const PowerMode = {\n  ON: '0001',\n  STANDBY: '0002',\n  SUSPEND: '0003',\n  OFF: '0004'\n};\n","import { padHex, encodeHex } from './util';\nimport { MessageType, PowerMode } from './types';\n\n// control codes\nconst TERMINATOR = \"0D\";\nconst SOH = \"01\";\nconst HEADER_RESERVED = \"30\";\nconst SENDER_ID = \"30\";\nconst STX = \"02\";\nconst ETX = \"03\";\n\nexport function BuildGetParameter(id, command){\n  // in hex: 02 _OCP1_ _OCP2_ _OP1_ _OP2_ 03\n  const body = STX + encodeHex(command.page) + encodeHex(command.code) + ETX;\n  const header = buildHeader(id, MessageType.GET, body.length/2);\n\n  return SOH + header + body + CalculateCheckCode(header + body) + TERMINATOR;\n}\n\nexport function BuildSetParameter(id, command, value){\n  // in hex: 02 _OCP1_ _OCP2_ _OP1_ _OP2_ _V1_ _V2_ _V3_ _V4_ 03\n  const body = STX + encodeHex(command.page) + encodeHex(command.code) + encodeHex(value) + ETX;\n  const header = buildHeader(id, MessageType.SET, body.length/2);\n\n  return SOH + header + body + CalculateCheckCode(header + body) + TERMINATOR;\n}\n\n\nexport function BuildGetCommand(id, command){\n  let encodedCommand;\n  switch(command){\n    case \"SERIAL\":\n      encodedCommand = encodeHex(\"C216\");\n    break;\n    case \"MODEL\":\n      encodedCommand = encodeHex(\"C217\");\n    break;\n    case \"POWER\":\n      encodedCommand = encodeHex(\"01D6\");\n    break;\n    default:\n      return null;\n  }\n\n  const body = STX + encodedCommand + ETX;\n  const header = buildHeader(id, MessageType.COMMAND, body.length/2);\n\n  return SOH + header + body + CalculateCheckCode(header + body) + TERMINATOR;\n}\n\nexport function BuildSetCommand(id, command, data){\n  let encodedCommand;\n  switch(command){\n    case \"POWER\":\n      encodedCommand = encodeHex(\"C203D6\") + encodeHex(getPowerMode(data));\n    break;\n    // TODO - other types\n    default:\n      return null;\n  }\n\n  const body = STX + encodedCommand + ETX;\n  const header = buildHeader(id, MessageType.COMMAND, body.length/2);\n\n  return SOH + header + body + CalculateCheckCode(header + body) + TERMINATOR;\n}\n\nfunction getPowerMode(key){\n  let powerMode = PowerMode[key];\n  if (!powerMode)\n    powerMode = PowerMode['OFF'];\n\n  return powerMode;\n}\n\nexport function BuildSaveSettings(id){\n  const body = STX + encodeHex(\"0C\") + ETX;\n  const header = buildHeader(id, MessageType.COMMAND, body.length/2);\n\n  return SOH + header + body + CalculateCheckCode(header + body) + TERMINATOR;\n}\n\nfunction buildHeader(id, type, length){\n  // in hex: 01 30 _ID_ 30 _TYPE_ _LEN_ _LEN2_\n  const lengthString = encodeHex(length.toString(16));\n\n  return HEADER_RESERVED + id + SENDER_ID + type + lengthString;\n}\n\nexport function CalculateCheckCode(message){\n  let code = parseInt(message[0]+message[1], 16);\n  \n  for(let i=2; i<message.length; i+=2){\n    code ^= parseInt(message[i]+message[i+1], 16);\n  }\n\n  return padHex(code.toString(16));\n}\n\n","import { MessageType, OperationType, PowerMode } from './types';\nimport { decodeHex } from './util';\nimport { Parameters } from './parameters/index';\nimport { CalculateCheckCode } from './builder';\n\nconst HEADER_LENGTH = 7 * 2;\n\n\nexport default function(message){\n  const parser = new Parser(message);\n\n  if (!parser.checkChecksum())\n    return parser.result;\n\n  if (!parser.parseHeader())\n    return parser.result;\n\n  if (!parser.parseBody())\n    return parser.result;\n\n  return parser.result;\n}\n\nclass Parser {\n  constructor(message){\n    this.message = message;\n    this.result = { err: null };\n  }\n\n  setError(err){\n    this.result.err = err;\n    return false;\n  }\n\n  checkChecksum(){\n    if (this.result.err != null)\n      return false;\n\n    const checksumByte = this.message.substr(this.message.length - 4, 2);\n    const calculatedByte = CalculateCheckCode(this.message.substr(2, this.message.length - 6));\n    if(checksumByte != calculatedByte)\n      return this.setError(\"BAD_CHECKSUM\");\n\n    return true;\n  }\n\n  parseHeader(){\n    if (this.result.err != null)\n      return false;\n\n    // in hex: 01 30 _ID_ 30 _TYPE_ _LEN_ _LEN2_\n    const header = this.message.substr(0, HEADER_LENGTH);\n\n    const rawTypeValue = header.substr(4*2, 2);\n    for (let key of Object.keys(MessageType)) {\n      if (MessageType[key] == rawTypeValue)\n        this.result.type = key;\n    }\n\n    if (this.result.type === undefined || this.result.type == null)\n      return this.setError(\"BAD_TYPE\");\n\n    const rawLength = header.substr(5*2, 4);\n    this.result.length = parseInt(decodeHex(rawLength), 16);\n  \n    return true;\n  }\n\n  parseBody(){\n    if (this.result.err != null)\n      return false;\n\n    const body = this.message.substr(HEADER_LENGTH, this.message.length - 4 - HEADER_LENGTH);\n\n    if(this.result.length != body.length/2)\n      return this.setError(\"BAD_LENGTH\");\n\n    switch(this.result.type){\n      case \"GET_REPLY\":\n      case \"SET_REPLY\":\n        this.parseParameterReply(body);\n      break;\n      case \"COMMAND_REPLY\":\n        this.parseCommandReply(body);\n      break;\n      default:\n        return this.setError(\"UNSUPPORTED_TYPE\");\n    }\n\n    return true;\n  }\n\n  parseParameterReply(body){\n    const rawResult       = body.substr(1*2, 2*2); // chars 1+2\n    const rawPage         = body.substr(3*2, 2*2); // chars 3+4\n    const rawCode         = body.substr(5*2, 2*2); // chars 5+6\n    const rawType         = body.substr(7*2, 2*2); // chars 7+8\n    const rawMaxValue     = body.substr(9*2, 4*2); // chars 9-12\n    const rawCurrentValue = body.substr(13*2, 4*2); // chars 13+14\n\n    const commandResult = decodeHex(rawResult);\n    const page          = decodeHex(rawPage);\n    const code          = decodeHex(rawCode);\n    const type          = decodeHex(rawType);\n    const maxValue      = decodeHex(rawMaxValue);\n    const currentValue  = decodeHex(rawCurrentValue);\n\n    //check result was good\n    if(commandResult != \"00\")\n      return this.setError(\"UNSUPPORTED_OPERATION\");\n\n    const commandType = Parameters.fromCodes(page, code);\n    if(commandType === null)\n      return this.setError(\"UNKNOWN_COMMAND\");\n    this.result.command = commandType.key;\n\n    // parse the operation type\n    for (let key of Object.keys(OperationType)) {\n      if (OperationType[key] == type)\n        this.result.operationType = key;\n    }\n    if (this.result.operationType === undefined || this.result.operationType == null)\n      return this.setError(\"UNKNOWN_OPERATION_TYPE\");\n\n    this.result.maxValue = maxValue;\n    this.result.value = currentValue;\n\n    if(commandType.value.type == \"range\")\n      this.result.value = parseInt(this.result.value, 16);\n\n    return true;\n  }\n\n\n  parseCommandReply(body){\n    let rawGroup = body.substr(1*2, 2*2); //chars 1+2\n    let group = decodeHex(rawGroup);\n    if(group == \"02\")\n      body = body.substr(2*2); //trim first 2 chars\n\n    rawGroup = body.substr(1*2, 2*2); //chars 1+2\n    group = decodeHex(rawGroup);\n    if(group == \"01\")\n      return this.setState(\"UNSUPPORTED_OPERATION\");\n    if(group == \"00\")\n      body = body.substr(2*2); //trim first 2 chars\n\n    rawGroup = body.substr(1*2, 2*2); //chars 1+2\n    group = decodeHex(rawGroup);\n\n    const rawCommand = body.substr(3*2, 2*2); //chars 3+4\n    const command = decodeHex(rawCommand);\n\n    switch(group){\n      case \"D6\": //get power\n        this.parseGetPower(body);\n      break;\n      case \"A1\": //self diag\n        // TODO \n        // console.log(\"SELF DIAG\");\n      break;\n      case \"C0\":\n        switch(command){\n          // TODO \n\n          default:\n            return this.setError(\"UNKNOWN_COMMAND\");\n        }\n      case \"C1\":\n        switch(command){\n          // TODO \n          \n          default:\n            return this.setError(\"UNKNOWN_COMMAND\");\n        }\n      case \"C2\":\n        switch(command){\n          case \"03\":\n            this.parseSetPower(body);\n          break;\n          default:\n            return this.setError(\"UNKNOWN_COMMAND\");\n        }\n      break;\n      case \"C3\":\n        switch(command){\n          case \"16\":\n            this.parseGetSerial(body);\n          break;\n          case \"17\":\n            this.parseGetModel(body);\n          break;\n          \n          default:\n            return this.setError(\"UNKNOWN_COMMAND\");\n        }\n      break;\n      default:\n        return this.setError(\"UNKNOWN_COMMAND\");\n    }\n  }\n\n  parseGetPower(body){\n    const rawState = body.substr(9*2, 4*2); //chars 15-18\n    return this.parsePowerHelper(rawState);\n  }\n\n  parseSetPower(body){\n    const rawState = body.substr(7*2, 4*2); //chars 13-16\n    return this.parsePowerHelper(rawState);\n  }\n\n  parsePowerHelper(rawState){\n    const state = decodeHex(rawState);\n\n    this.result.command = \"POWER\";\n    this.result.state = \"UNKNOWN\";\n    for (let key of Object.keys(PowerMode)) {\n      if (PowerMode[key] == state) {\n        this.result.state = key;\n        return;\n      }\n    }\n  }\n\n  parseGetSerial(body){\n    const length = this.result.length*2 - 6*2;\n    const rawSerial = body.substr(5*2, length);\n    const serial = decodeHex(rawSerial);\n\n    this.result.command = \"SERIAL\";\n    this.result.serial = decodeHex(serial).replace(/\\0/g, '');\n  }\n\n  parseGetModel(body){\n    const length = this.result.length*2 - 6*2;\n    const rawModel = body.substr(5*2, length);\n    const model = decodeHex(rawModel);\n\n    this.result.command = \"MODEL\";\n    this.result.model = decodeHex(model).replace(/\\0/g, '');\n  }\n\n\n}","\n// convert from a friendly monitor id\nexport function MonitorIdToHex(id){\n  if (id == \"ALL\")\n    return \"2A\";\n\n  if (id >= 1 && id <= 100)\n    return (64 + id).toString(16);\n\n  if (id >= 'A' && id <= 'J')\n    return (id.charCodeAt(0) - 16).toString(16);\n\n  return null;\n}\n\n// convert to a friendly monitor id\nexport function MonitorIdFromHex(encoded){\n  const id = parseInt(encoded, 16);\n\n  if (encoded == \"2A\")\n    return \"ALL\";\n\n  if (id >= 65 && id <= 164)\n    return id - 64;\n\n  if (id >= 49 || id <= 58)\n    return String.fromCharCode(id + 16);\n\n  return null;\n}\n","\nconst TIMEOUT = 5000;\n\nexport default class MessageQueue {\n  constructor(client, debugLog){\n    this.client = client;\n    this.debugLog = debugLog;\n    this.queue = [];\n  }\n\n  send(message){\n    return new Promise((resolve, reject) => {\n      const promise = { resolve, reject };\n\n      this.queue.push({\n        message: message,\n        promise: promise,\n        sent: false,\n        time: Date.now()\n      });\n\n      this.debugLog(\"Queued message\");\n      this.debugLog(this.queue.length + \" message in queue\");\n\n      this._trySend();\n    });\n  }\n\n  _trySend(){\n    if(this.queue.length == 0)\n      return false;\n\n    const message = this.queue[0];\n    if(message.sent){\n      this.debugLog(\"Message queued\");\n      return false;\n    }\n\n    message.sent = true;\n    this.debugLog(\"Sending: \" + message.message);\n    this.client.write(message.message, \"hex\", () => {\n      //erm.. anything needed here?\n      this.debugLog(\"Message sent\");\n    });\n    return true;\n  }\n\n  received (){\n    if(this.queue.length == 0)\n      return null;\n\n    this.debugLog(\"Received message\");\n    const message = this.queue.shift();\n\n    this._trySend();\n\n    return message.promise;\n  }\n\n  checkTimeout(){\n    if(this.queue.length == 0)\n      return false;\n\n    const message = this.queue[0];\n    if(message.sent)\n      return false; \n\n    if(message.time <= Date.now()-TIMEOUT){\n      this.queue.shift();\n\n      this.debugLog(\"Timeout waiting for response\");\n      message.promise.reject('TIMEOUT');\n\n      return this._trySend();\n    }\n\n    return true;\n  }\n}","import net from 'net-socket';\nimport { setInterval, setTimeout, clearInterval } from 'timers';\n\nimport { ParameterFromKey } from './parameters/index';\nimport { BuildGetParameter, BuildSetParameter, BuildGetCommand, BuildSetCommand } from './builder';\nimport { encodeHex } from './util';\nimport ParseMessage from './parser';\nimport { MonitorIdToHex } from './monitorid';\nimport MessageQueue from './messagequeue';\n\nconst DEFAULT_ID = \"ALL\";\nconst DEFAULT_PORT = 7142;\nconst TIMEOUT_INTERVAL = 100;\nconst RECEIVE_PART_TIMEOUT = 100;\n\nexport function Create(ip, monitorId, debug){\n  if (monitorId === undefined)\n    monitorId = DEFAULT_ID;\n\n  monitorId = MonitorIdToHex(monitorId);\n  if(monitorId == null){\n    // console.log(\"Bad monitor id: \"+id)\n    return 'BAD_MONITOR';\n  }\n\n  return new NecControl(ip, monitorId, debug);\n}\n\nclass NecControl {\n  constructor(ip, monitorId, debug){\n    this.ip = ip;\n    this.monitorId = monitorId;\n    this.debug = debug;\n    this.events = [];\n    this.client = null;\n\n    this.receiveTimeout = null;\n    this.receiveBuffer = \"\";\n\n  }\n\n  _debugLog(message){\n    if (this.debug)\n      console.log(message);\n  }\n\n  on(event, callback){\n    this.events[event] = callback;\n\n    if (this.client)\n      this.client.on(event, callback);\n  }\n\n  connect(){\n    if (this.client != null){\n      this.client.end();\n      this.client.unref();\n      this.client.destroy();\n      this.client = null;\n    }\n\n    if (this.timeoutInterval)\n      clearInterval(this.timeoutInterval);\n\n    this.client = net.connect(DEFAULT_PORT, this.ip);\n    this.client.setEncoding('hex');\n\n    this.messageQueue = new MessageQueue(this.client, (msg) => this._debugLog(msg));\n    this.timeoutInterval = setInterval(() => this.messageQueue.checkTimeout(), TIMEOUT_INTERVAL);\n\n    this.client.on('data', data => this._receivedMessage(data));\n  }\n\n  _receivedMessage(message){\n    if (this.client == null)\n      return;\n\n    this._debugLog(\"Received message\");\n\n    if(this.receiveTimeout != null){\n      this.receiveBuffer += message;\n      return;\n    }\n\n    this.receiveBuffer = message;\n\n    this.receiveTimeout = setTimeout(() => {\n      this._debugLog(\"Processing message: \" + this.receiveBuffer);\n\n      const parseResult = ParseMessage(this.receiveBuffer);\n      this.receiveTimeout = null;\n      this.receiveBuffer = \"\";\n\n      const promise = this.messageQueue.received();\n      if (promise === null || promise === undefined)\n        return;\n\n      if(parseResult.err)\n        return promise.reject(parseResult.err);\n\n      this._debugLog(\"Message parsed successfully\");\n      promise.resolve(parseResult);\n    }, RECEIVE_PART_TIMEOUT);    \n  }\n\n  close(){\n    if(this.client == null)\n      return;\n\n    this._debugLog(\"Closing Connection\");\n\n    this.client.destroy();\n  }\n\n  getParameter(key){\n    this._debugLog(\"Running get: \" + key);\n\n    const parameter = ParameterFromKey(key);\n    if(parameter === null){\n      return Promise.reject('BAD_KEY');\n    }\n\n    const message = BuildGetParameter(this.monitorId, parameter);\n    return this.messageQueue.send(message);\n  }\n\n  //TODO - wrap value up properly\n  setParameter(key, value){\n    if (this.client == null)\n      return;\n    \n    this._debugLog(\"Running set: \" + key);\n\n    const parameter = ParameterFromKey(key);\n    if(parameter === null){\n      return Promise.reject('BAD_KEY');\n    }\n\n    if(parameter.type == \"range\")\n      value = encodeHex(value);\n\n    const message = BuildSetParameter(this.monitorId, parameter, value);\n    return this.messageQueue.send(message);\n  }\n\n  getCommand(command){\n    if (this.client == null)\n      return;\n    \n    this._debugLog(\"Running getCommand: \" + command);\n\n    const message = BuildGetCommand(this.monitorId, command);\n    if(message === undefined || message === null)\n      return Promise.reject('NO_MESSAGE');\n\n    return this.messageQueue.send(message);\n  }\n\n  setCommand(command, data){\n    if (this.client == null)\n      return;\n    \n    this._debugLog(\"Running setCommand: \" + command);\n\n    const message = BuildSetCommand(this.monitorId, command, data);\n    if(message === undefined || message === null)\n      return Promise.reject('NO_MESSAGE');\n\n    return this.messageQueue.send(message);\n  }\n\n  sendRAW(message){\n    if (this.client == null)\n      return;\n    \n    if(message === undefined || message === null)\n      return Promise.reject('NO_MESSAGE');\n\n    this._debugLog(\"Sending raw\");\n\n    return this.messageQueue.send(message);\n  }\n\n\n}"],"names":["FlattenParameters","key","tree","result","page","code","type","length","i","Parameters","picture","adjust","audio","schedule","ParametersFlat","ParameterFromKey","targetKey","undefined","toUpperCase","Object","keys","node","padHex","hex","encodeHex","encoded","charCodeAt","toString","decodeHex","b","substr","c","String","fromCharCode","parseInt","MessageType","OperationType","PowerMode","TERMINATOR","SOH","HEADER_RESERVED","SENDER_ID","STX","ETX","BuildGetParameter","id","command","body","header","buildHeader","GET","CalculateCheckCode","BuildSetParameter","value","SET","BuildGetCommand","encodedCommand","COMMAND","BuildSetCommand","data","getPowerMode","powerMode","lengthString","message","HEADER_LENGTH","parser","Parser","checkChecksum","parseHeader","parseBody","err","setError","checksumByte","calculatedByte","rawTypeValue","rawLength","parseParameterReply","parseCommandReply","rawResult","rawPage","rawCode","rawType","rawMaxValue","rawCurrentValue","commandResult","maxValue","currentValue","commandType","fromCodes","operationType","rawGroup","group","setState","rawCommand","parseGetPower","parseSetPower","parseGetSerial","parseGetModel","rawState","parsePowerHelper","state","rawSerial","serial","replace","rawModel","model","MonitorIdToHex","TIMEOUT","MessageQueue","client","debugLog","queue","send","Promise","resolve","reject","promise","push","Date","now","_trySend","sent","write","received","shift","checkTimeout","time","DEFAULT_ID","DEFAULT_PORT","TIMEOUT_INTERVAL","RECEIVE_PART_TIMEOUT","Create","ip","monitorId","debug","NecControl","events","receiveTimeout","receiveBuffer","_debugLog","console","log","on","event","callback","connect","end","unref","destroy","timeoutInterval","clearInterval","net","setEncoding","messageQueue","msg","setInterval","_receivedMessage","setTimeout","parseResult","ParseMessage","close","getParameter","parameter","setParameter","getCommand","setCommand","sendRAW"],"mappings":"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"}